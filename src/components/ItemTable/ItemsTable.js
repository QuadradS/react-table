import React from 'react';import '../../assets/css/items-table.css';import TableCol from './TableCol';import {data} from '../../server/data';import Check from './../ui/icons/Check';import {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';import Settings from './../ui/icons/Settings';const reorder = (list, startIndex, endIndex) => {    const result = Array.from(list);    const [removed] = result.splice(startIndex, 1);    result.splice(endIndex, 0, removed);    return result;};const getItemStyle = (isDragging, draggableStyle) => ({    ...draggableStyle});const getListStyle = isDraggingOver => ({    background: isDraggingOver ? 'lightblue' : 'lightgrey',    display: 'flex'});class ItemsTable extends React.Component {    constructor() {        super();        this.state = {            keys: [],            res: []        }    }    componentWillMount() {        if(this.state.res.length < 1){            const keys = Object.keys(data[0]);            const res = keys.map((i, key) => data.map((item, key) => item[i]));            this.setState({res, keys})        }    }    onDragEnd = (result) => {        if (!result.destination) {            return;        }        const res = reorder(            this.state.res,            result.source.index,            result.destination.index        );    };    render() {        return (            <div className="item-table">                <div className="item-table--header">                    <span className="title">                        ItemTable                    </span>                    <div className="table-customise">                        <Settings/>                        <span>                            Table customise                        </span>                    </div>                </div>                <div className="flex">                    <div className="table-settings left">                        <span className="table-settings--item">No img</span>                        <span className="table-settings--item table-settings--item-canter">1st img</span>                        <span className="table-settings--item table-settings--item-active">All img</span>                    </div>                </div>                <div className="test-wrap">                    <div className="table flex">                        <DragDropContext onDragEnd={this.onDragEnd} onDragStart={this.test} DragDropContext={this.test}>                            <Droppable droppableId="droppable" direction="horizontal">                                {(provided, snapshot) => (                                    <div                                        ref={provided.innerRef}                                        style={getListStyle(snapshot.isDraggingOver)}                                        {...provided.droppableProps}                                    >                                        {this.state.res.map((items, key) =>                                            <Draggable draggableId={key} index={key} disableInteractiveElementBlocking={false}>                                                {(provided, snapshot) => (                                                    <div                                                        ref={provided.innerRef}                                                        {...provided.draggableProps}                                                        {...provided.dragHandleProps}                                                    >                                                        <TableCol key={key} title={this.state.keys[key]} items={items}/>                                                    </div>                                                )}                                            </Draggable>                                        )}                                    </div>                                )}                            </Droppable>                        </DragDropContext>                        {/*{this.state.res.map((items,key)=> <TableCol key={key} title={this.state.keys[key]} items={items} /> )}*/}                    </div>                </div>            </div>        )    }};export default ItemsTable;