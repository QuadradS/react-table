import React from 'react';import '../../assets/css/items-table.css';import TableCol from './TableCol';import TableCustomize from './TableCustomize';import TableHead from './TableHead';import CheckBox from './../ui/components/CheckBox';import {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';const reorder = (list, startIndex, endIndex) => {    const result = Array.from(list);    const [removed] = result.splice(startIndex, 1);    result.splice(endIndex, 0, removed);    return result;};const getItemStyle = (isDragging, draggableStyle) => ({    ...draggableStyle});const getListStyle = isDraggingOver => ({    background: isDraggingOver ? 'lightblue' : 'lightgrey',    display: 'flex'});class ItemsTable extends React.Component {    constructor() {        super();        this.state = {            keys: [],            res: []        }    }    componentWillMount() {        this.props.getItems();    }    onSelectAll = () =>{        this.props.selectAll    }    render() {        if (this.props.isItemsFetching) {            return ( <h1>WAIT</h1> )        }        return (            <div className="item-table">                <div className="item-table--header">                    <span className="title">                        ItemTable                    </span>                    <TableCustomize/>                </div>                <div className="flex">                    <div className="table-settings left">                        <span className="table-settings--item">No img</span>                        <span className="table-settings--item table-settings--item-canter">1st img</span>                        <span className="table-settings--item table-settings--item-active">All img</span>                    </div>                </div>                <div className="test-wrap flex items-start">                    <div className="table-col actions">                        <div className="table-row--cell table-row--cell-header actions--header">                            <div className="wh20" onClick={()=>this.onSelectAll()}>                                <CheckBox state={true}/>                            </div>                            <p>Actions</p>                        </div>                        <TableHead items={this.props.sourceItems} onSelect={this.props.selectItem}/>                    </div>                    <div className="table">                        { this.props.items.map((item)=> <TableCol key={item.id} title={this.props.keys[item.id]} items={item.items}/> ) }                    </div>                </div>            </div>        )    }};export default ItemsTable;{/*<DragDropContext onDragEnd={this.onDragEnd}>*/}{/*<Droppable droppableId="droppable" direction="horizontal">*/}{/*{(provided, snapshot) => (*/}{/*<div*/}{/*ref={provided.innerRef}*/}{/*style={getListStyle(snapshot.isDraggingOver)}*/}{/*{...provided.droppableProps}*/}{/*>*/}{/*{this.props.items.map((item, index) =>*/}{/*<Draggable key={item.id} draggableId={item.id} index={index}*/}{/*disableInteractiveElementBlocking={false}>*/}{/*{(provided, snapshot) => (*/}{/*<div*/}{/*ref={provided.innerRef}*/}{/*{...provided.draggableProps}*/}{/*{...provided.dragHandleProps}*/}{/*>*/}{/*<TableCol key={item.id} title={this.props.keys[item.id]}*/}{/*items={item.items}/>*/}{/*</div>*/}{/*)}*/}{/*</Draggable>*/}{/*)}*/}{/*</div>*/}{/*)}*/}{/*</Droppable>*/}{/*</DragDropContext>*/}